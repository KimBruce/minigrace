Beginning test run at Wed Jun 27 11:35:49 PDT 2018
    in /home/tnguyen/Documents/GitHub/minigrace/modules/gradualTypesNDTest
minigrace[.]: t309_typeInsideType_test: 0.21 (+0.21): starting compilation
minigrace[.]: t309_typeInsideType_test: 0.26 (+0.05): lexing.
minigrace[.]: t309_typeInsideType_test: 0.27 (+0.01): parsing.
minigrace[.]: t309_typeInsideType_test: 0.32 (+0.05): checking dialect gradualTypesND used by module t309_typeInsideType_test
minigrace[.]: t309_typeInsideType_test: 0.57 (+0.25): loading dialect "gradualTypesND" for checkers.
minigrace[.]: t309_typeInsideType_test: 0.78 (+0.21): rewriting tree.
minigrace[.]: t309_typeInsideType_test: 0.82 (+0.04): symbol tables built.

1958: superclass: false

matched as typeDec
didn't match as typeDec
didn't match as typeDec
1141: typesScope in fromIdentifier of ident: identifier‹Number› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
⟭]
ident.value is: Number
2518 The type name is: T and it has embedded types of: dict⟬InternalType::Number⟭
2518.5 The type itself is: ‹anon›{ InternalType -> Pattern;  }
1965: hasInherits is false

1989: superType is Object

2009: processing typedec T
1141: typesScope in fromIdentifier of ident: identifier‹Number› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  InternalType -> Pattern; 
  debugValue -> String; }
⟭]
ident.value is: Number
2493 mType is: T -> Pattern
2009: processing defdec testDec
2022: in def or var case
574: defd: defdec testDec
575: defd.dtype T.InternalType
1172 is member T.InternalType
1173 finding T.InternalType
1174 memb.receiver is: identifier‹T›
Scope types in member search is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::‹anon›{ InternalType -> Pattern;  }⟭]
Scope methods in member search is: [dict⟬Done::Done -> Pattern, Boolean::Boolean -> Pattern, Set::Set -> Pattern, Number::Number -> Pattern, Object::Object -> Pattern, List::List -> Pattern, Pattern::Pattern -> Pattern, Dynamic::Dynamic -> Pattern, Binding::Binding -> Pattern, done::done -> Done, true::true -> Boolean, Point::Point -> Pattern, String::String -> Pattern, Dictionary::Dictionary -> Pattern, Range::Range -> Pattern, Sequence::Sequence -> Pattern, Unknown::Unknown -> Pattern, false::false -> Boolean⟭, dict⟬⟭]
1183 recType is: ‹anon›{ InternalType -> Pattern;  }
1185 recType's type list is: dict⟬InternalType::Number⟭
1184 member retType is: Number
2024: add testDec -> Number to allMethods
2009: processing call print "test succeeded"
2410 allTypes is: dict⟬T::‹anon›{ InternalType -> Pattern;  }⟭
2411 publicTypes is: dict⟬T::‹anon›{ InternalType -> Pattern;  }⟭
2045: internalType is { 
  ≠(_ : Object) -> Boolean; 
  testDec -> Number; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }


2046: internalType's types is dict⟬T::‹anon›{ InternalType -> Pattern;  }⟭

2058: publicType is { 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }


2070: checking index 1 at line 3
182: checking types of typedec T
2072: finished index 1

2070: checking index 2 at line 7
182: checking types of defdec testDec
1172 is member T.InternalType
1173 finding T.InternalType
1174 memb.receiver is: identifier‹T›
Scope types in member search is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬$elf::{ 
  ≠(_ : Object) -> Boolean; 
  testDec -> Number; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }
, T::‹anon›{ InternalType -> Pattern;  }⟭]
Scope methods in member search is: [dict⟬Done::Done -> Pattern, Boolean::Boolean -> Pattern, Set::Set -> Pattern, Number::Number -> Pattern, Object::Object -> Pattern, List::List -> Pattern, Pattern::Pattern -> Pattern, Dynamic::Dynamic -> Pattern, Binding::Binding -> Pattern, done::done -> Done, true::true -> Boolean, Point::Point -> Pattern, String::String -> Pattern, Dictionary::Dictionary -> Pattern, Range::Range -> Pattern, Sequence::Sequence -> Pattern, Unknown::Unknown -> Pattern, false::false -> Boolean⟭, dict⟬testDec::testDec -> Number⟭]
1183 recType is: ‹anon›{ InternalType -> Pattern;  }
1185 recType's type list is: dict⟬InternalType::Number⟭
1184 member retType is: Number
1820: defType is Number
182: checking types of num 47
2072: finished index 2

2070: checking index 3 at line 9
182: checking types of call print "test succeeded"
1672: receiver is identifier‹prelude›
1673: reciever name is: prelude
182: checking types of identifier‹prelude›
182: checking types of identifier‹prelude›
1680: type of receiver identifier‹prelude› is Unknown
1681: rType is Unknown
1701: callType: Unknown
2072: finished index 3

2602 types scope is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬$elf::{ 
  ≠(_ : Object) -> Boolean; 
  testDec -> Number; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }
, T::‹anon›{ InternalType -> Pattern;  }⟭]
1971: *** Visited object module t309_typeInsideType_testconfidential type is { 
  ≠(_ : Object) -> Boolean; 
  testDec -> Number; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }

public type is { 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }
minigrace[.]: t309_typeInsideType_test: 0.88 (+0.06): generating JavaScript code.
AST nodes compiled:
    identifier	2
    dialect	1
    typedec	1
    typeliteral	1
    method	1
    defdec	1
    num	1
    member	1
    call	1
    string	1
minigrace[.]: t309_typeInsideType_test: 0.92 (+0.04): done.
NoSuchMethod on line 7 of t309_typeInsideType_test: no method InternalType on Type type T.
  raised at module initialization at line 7 of t309_typeInsideType_test
  requested on line 0 of .   6:    7: def testDec : T.InternalType = 47   8: !FAIL t309_typeInsideType_test.grace: wrong output
Errors:
NoSuchMethod on line 7 of t309_typeInsideType_test: no method InternalType on Type type T.
  raised at module initialization at line 7 of t309_typeInsideType_test
  requested on line 0 of .   6:    7: def testDec : T.InternalType = 47   8: Got output:
Expected output:
test succeeded
minigrace[.]: t311_typeInAmpersand_test: 0.22 (+0.22): starting compilation
minigrace[.]: t311_typeInAmpersand_test: 0.26 (+0.04): lexing.
minigrace[.]: t311_typeInAmpersand_test: 0.28 (+0.02): parsing.
minigrace[.]: t311_typeInAmpersand_test: 0.33 (+0.05): checking dialect gradualTypesND used by module t311_typeInAmpersand_test
minigrace[.]: t311_typeInAmpersand_test: 0.57 (+0.24): loading dialect "gradualTypesND" for checkers.
minigrace[.]: t311_typeInAmpersand_test: 0.78 (+0.21): rewriting tree.
minigrace[.]: t311_typeInAmpersand_test: 0.82 (+0.04): symbol tables built.

1958: superclass: false

matched as typeDec
matched as typeDec
didn't match as typeDec
didn't match as typeDec
1141: typesScope in fromIdentifier of ident: identifier‹Number› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
, U::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
⟭]
ident.value is: Number
2518 The type name is: T and it has embedded types of: dict⟬InternalType::Number⟭
2518.5 The type itself is: ‹anon›{ InternalType -> Pattern;  }
1141: typesScope in fromIdentifier of ident: identifier‹Number› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  InternalType -> Pattern; 
  debugValue -> String; }
, U::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
⟭]
ident.value is: Number
2518 The type name is: U and it has embedded types of: dict⟬InternalType::Number⟭
2518.5 The type itself is: ‹anon›{ InternalType -> Pattern;  }
1965: hasInherits is false

1989: superType is Object

2009: processing typedec T
1141: typesScope in fromIdentifier of ident: identifier‹Number› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  InternalType -> Pattern; 
  debugValue -> String; }
, U::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  InternalType -> Pattern; 
  debugValue -> String; }
⟭]
ident.value is: Number
2493 mType is: T -> Pattern
2009: processing typedec U
1141: typesScope in fromIdentifier of ident: identifier‹Number› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::‹anon›{ InternalType -> Pattern;  }, U::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  InternalType -> Pattern; 
  debugValue -> String; }
⟭]
ident.value is: Number
2493 mType is: U -> Pattern
2009: processing defdec testDec
2022: in def or var case
574: defd: defdec testDec
575: defd.dtype T & U.InternalType
1172 is member T & U.InternalType
1173 finding &.InternalType
1174 memb.receiver is: op &(1)
Scope types in member search is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::‹anon›{ InternalType -> Pattern;  }, U::‹anon›{ InternalType -> Pattern;  }⟭]
Scope methods in member search is: [dict⟬Done::Done -> Pattern, Boolean::Boolean -> Pattern, Set::Set -> Pattern, Number::Number -> Pattern, Object::Object -> Pattern, List::List -> Pattern, Pattern::Pattern -> Pattern, Dynamic::Dynamic -> Pattern, Binding::Binding -> Pattern, done::done -> Done, true::true -> Boolean, Point::Point -> Pattern, String::String -> Pattern, Dictionary::Dictionary -> Pattern, Range::Range -> Pattern, Sequence::Sequence -> Pattern, Unknown::Unknown -> Pattern, false::false -> Boolean⟭, dict⟬⟭]
1141: typesScope in fromIdentifier of ident: identifier‹T› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::‹anon›{ InternalType -> Pattern;  }, U::‹anon›{ InternalType -> Pattern;  }⟭]
ident.value is: T
1141: typesScope in fromIdentifier of ident: identifier‹U› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::‹anon›{ InternalType -> Pattern;  }, U::‹anon›{ InternalType -> Pattern;  }⟭]
ident.value is: U
966: ampersand called
967: &Self is: ‹anon›{ InternalType -> Pattern;  }
968: &other is: ‹anon›{ InternalType -> Pattern;  }
1183 recType is: {set{≠(_ : Object) -> Boolean, hash -> Number, asString -> String, asDebugString -> String, :: -> Binding, basicAsString -> String, debugIterator -> Iterator, match -> Unknown, list(_ : Collection) -> List, InternalType -> Pattern, ==(_ : Object) -> Boolean, debugValue -> String}} & ‹anon›{ InternalType -> Pattern;  }
1185 recType's type list is: dict⟬⟭
1184 member retType is: a noSuchType
2024: add testDec -> Unknown to allMethods
2009: processing call print "test succeeded"
2410 allTypes is: dict⟬T::‹anon›{ InternalType -> Pattern;  }, U::‹anon›{ InternalType -> Pattern;  }⟭
2411 publicTypes is: dict⟬T::‹anon›{ InternalType -> Pattern;  }, U::‹anon›{ InternalType -> Pattern;  }⟭
2045: internalType is { 
  ≠(_ : Object) -> Boolean; 
  testDec -> Unknown; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }


2046: internalType's types is dict⟬T::‹anon›{ InternalType -> Pattern;  }, U::‹anon›{ InternalType -> Pattern;  }⟭

2058: publicType is { 
  ≠(_ : Object) -> Boolean; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }


2070: checking index 1 at line 3
182: checking types of typedec T
2072: finished index 1

2070: checking index 2 at line 7
182: checking types of typedec U
2072: finished index 2

2070: checking index 3 at line 11
182: checking types of defdec testDec
1172 is member T & U.InternalType
1173 finding &.InternalType
1174 memb.receiver is: op &(1)
Scope types in member search is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬$elf::{ 
  ≠(_ : Object) -> Boolean; 
  testDec -> Unknown; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }
, T::‹anon›{ InternalType -> Pattern;  }, U::‹anon›{ InternalType -> Pattern;  }⟭]
Scope methods in member search is: [dict⟬Done::Done -> Pattern, Boolean::Boolean -> Pattern, Set::Set -> Pattern, Number::Number -> Pattern, Object::Object -> Pattern, List::List -> Pattern, Pattern::Pattern -> Pattern, Dynamic::Dynamic -> Pattern, Binding::Binding -> Pattern, done::done -> Done, true::true -> Boolean, Point::Point -> Pattern, String::String -> Pattern, Dictionary::Dictionary -> Pattern, Range::Range -> Pattern, Sequence::Sequence -> Pattern, Unknown::Unknown -> Pattern, false::false -> Boolean⟭, dict⟬testDec::testDec -> Unknown⟭]
1141: typesScope in fromIdentifier of ident: identifier‹T› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬$elf::{ 
  ≠(_ : Object) -> Boolean; 
  testDec -> Unknown; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }
, T::‹anon›{ InternalType -> Pattern;  }, U::‹anon›{ InternalType -> Pattern;  }⟭]
ident.value is: T
1141: typesScope in fromIdentifier of ident: identifier‹U› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬$elf::{ 
  ≠(_ : Object) -> Boolean; 
  testDec -> Unknown; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }
, T::‹anon›{ InternalType -> Pattern;  }, U::‹anon›{ InternalType -> Pattern;  }⟭]
ident.value is: U
966: ampersand called
967: &Self is: ‹anon›{ InternalType -> Pattern;  }
968: &other is: ‹anon›{ InternalType -> Pattern;  }
1183 recType is: {set{≠(_ : Object) -> Boolean, hash -> Number, asString -> String, asDebugString -> String, :: -> Binding, basicAsString -> String, debugIterator -> Iterator, match -> Unknown, list(_ : Collection) -> List, InternalType -> Pattern, ==(_ : Object) -> Boolean, debugValue -> String}} & ‹anon›{ InternalType -> Pattern;  }
1185 recType's type list is: dict⟬⟭
1184 member retType is: a noSuchType
1820: defType is Unknown
182: checking types of num 47
2072: finished index 3

2070: checking index 4 at line 13
182: checking types of call print "test succeeded"
1672: receiver is identifier‹prelude›
1673: reciever name is: prelude
182: checking types of identifier‹prelude›
182: checking types of identifier‹prelude›
1680: type of receiver identifier‹prelude› is Unknown
1681: rType is Unknown
1701: callType: Unknown
2072: finished index 4

2602 types scope is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬$elf::{ 
  ≠(_ : Object) -> Boolean; 
  testDec -> Unknown; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }
, T::‹anon›{ InternalType -> Pattern;  }, U::‹anon›{ InternalType -> Pattern;  }⟭]
1971: *** Visited object module t311_typeInAmpersand_testconfidential type is { 
  ≠(_ : Object) -> Boolean; 
  testDec -> Unknown; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }

public type is { 
  ≠(_ : Object) -> Boolean; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }
minigrace[.]: t311_typeInAmpersand_test: 0.91 (+0.09): generating JavaScript code.
AST nodes compiled:
    identifier	4
    typeliteral	2
    method	2
    typedec	2
    defdec	1
    dialect	1
    num	1
    member	1
    op	1
    call	1
    string	1
minigrace[.]: t311_typeInAmpersand_test: 0.96 (+0.05): done.
NoSuchMethod on line 11 of t311_typeInAmpersand_test: no method InternalType on TypeIntersection.new(_,_) (type T & type U).
  raised at module initialization at line 11 of t311_typeInAmpersand_test
  requested on line 0 of .  10:   11: def testDec : (T&U).InternalType = 47  12: !FAIL t311_typeInAmpersand_test.grace: wrong output
Errors:
NoSuchMethod on line 11 of t311_typeInAmpersand_test: no method InternalType on TypeIntersection.new(_,_) (type T & type U).
  raised at module initialization at line 11 of t311_typeInAmpersand_test
  requested on line 0 of .  10:   11: def testDec : (T&U).InternalType = 47  12: Got output:
Expected output:
test succeeded
minigrace[.]: t313_diffTypeInAmpersand_test: 0.22 (+0.22): starting compilation
minigrace[.]: t313_diffTypeInAmpersand_test: 0.26 (+0.04): lexing.
minigrace[.]: t313_diffTypeInAmpersand_test: 0.28 (+0.02): parsing.
minigrace[.]: t313_diffTypeInAmpersand_test: 0.33 (+0.05): checking dialect gradualTypesND used by module t313_diffTypeInAmpersand_test
minigrace[.]: t313_diffTypeInAmpersand_test: 0.57 (+0.24): loading dialect "gradualTypesND" for checkers.
minigrace[.]: t313_diffTypeInAmpersand_test: 0.81 (+0.24): rewriting tree.
minigrace[.]: t313_diffTypeInAmpersand_test: 0.84 (+0.03): symbol tables built.

1958: superclass: false

matched as typeDec
matched as typeDec
didn't match as typeDec
didn't match as typeDec
didn't match as typeDec
1141: typesScope in fromIdentifier of ident: identifier‹Number› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
, U::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
⟭]
ident.value is: Number
2518 The type name is: T and it has embedded types of: dict⟬InternalType1::Number⟭
2518.5 The type itself is: ‹anon›{ InternalType1 -> Pattern;  }
1141: typesScope in fromIdentifier of ident: identifier‹String› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::{ 
  ≠(_ : Object) -> Boolean; 
  InternalType1 -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
, U::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
⟭]
ident.value is: String
2518 The type name is: U and it has embedded types of: dict⟬InternalType2::String⟭
2518.5 The type itself is: ‹anon›{ InternalType2 -> Pattern;  }
1965: hasInherits is false

1989: superType is Object

2009: processing typedec T
1141: typesScope in fromIdentifier of ident: identifier‹Number› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::{ 
  ≠(_ : Object) -> Boolean; 
  InternalType1 -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
, U::{ 
  ≠(_ : Object) -> Boolean; 
  InternalType2 -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
⟭]
ident.value is: Number
2493 mType is: T -> Pattern
2009: processing typedec U
1141: typesScope in fromIdentifier of ident: identifier‹String› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::‹anon›{ InternalType1 -> Pattern;  }, U::{ 
  ≠(_ : Object) -> Boolean; 
  InternalType2 -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
⟭]
ident.value is: String
2493 mType is: U -> Pattern
2009: processing defdec testDec1
2022: in def or var case
574: defd: defdec testDec1
575: defd.dtype T & U.InternalType1
1172 is member T & U.InternalType1
1173 finding &.InternalType1
1174 memb.receiver is: op &(1)
Scope types in member search is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::‹anon›{ InternalType1 -> Pattern;  }, U::‹anon›{ InternalType2 -> Pattern;  }⟭]
Scope methods in member search is: [dict⟬Done::Done -> Pattern, Boolean::Boolean -> Pattern, Set::Set -> Pattern, Number::Number -> Pattern, Object::Object -> Pattern, List::List -> Pattern, Pattern::Pattern -> Pattern, Dynamic::Dynamic -> Pattern, Binding::Binding -> Pattern, done::done -> Done, true::true -> Boolean, Point::Point -> Pattern, String::String -> Pattern, Dictionary::Dictionary -> Pattern, Range::Range -> Pattern, Sequence::Sequence -> Pattern, Unknown::Unknown -> Pattern, false::false -> Boolean⟭, dict⟬⟭]
1141: typesScope in fromIdentifier of ident: identifier‹T› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::‹anon›{ InternalType1 -> Pattern;  }, U::‹anon›{ InternalType2 -> Pattern;  }⟭]
ident.value is: T
1141: typesScope in fromIdentifier of ident: identifier‹U› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::‹anon›{ InternalType1 -> Pattern;  }, U::‹anon›{ InternalType2 -> Pattern;  }⟭]
ident.value is: U
966: ampersand called
967: &Self is: ‹anon›{ InternalType1 -> Pattern;  }
968: &other is: ‹anon›{ InternalType2 -> Pattern;  }
1183 recType is: {set{≠(_ : Object) -> Boolean, InternalType1 -> Pattern, hash -> Number, asString -> String, asDebugString -> String, :: -> Binding, basicAsString -> String, debugIterator -> Iterator, match -> Unknown, list(_ : Collection) -> List, ==(_ : Object) -> Boolean, debugValue -> String}} & ‹anon›{ InternalType2 -> Pattern;  }
1185 recType's type list is: dict⟬⟭
1184 member retType is: a noSuchType
2024: add testDec1 -> Unknown to allMethods
2009: processing defdec testDec2
2022: in def or var case
574: defd: defdec testDec2
575: defd.dtype T & U.InternalType2
1172 is member T & U.InternalType2
1173 finding &.InternalType2
1174 memb.receiver is: op &(1)
Scope types in member search is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::‹anon›{ InternalType1 -> Pattern;  }, U::‹anon›{ InternalType2 -> Pattern;  }⟭]
Scope methods in member search is: [dict⟬Done::Done -> Pattern, Boolean::Boolean -> Pattern, Set::Set -> Pattern, Number::Number -> Pattern, Object::Object -> Pattern, List::List -> Pattern, Pattern::Pattern -> Pattern, Dynamic::Dynamic -> Pattern, Binding::Binding -> Pattern, done::done -> Done, true::true -> Boolean, Point::Point -> Pattern, String::String -> Pattern, Dictionary::Dictionary -> Pattern, Range::Range -> Pattern, Sequence::Sequence -> Pattern, Unknown::Unknown -> Pattern, false::false -> Boolean⟭, dict⟬testDec1::testDec1 -> Unknown⟭]
1141: typesScope in fromIdentifier of ident: identifier‹T› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::‹anon›{ InternalType1 -> Pattern;  }, U::‹anon›{ InternalType2 -> Pattern;  }⟭]
ident.value is: T
1141: typesScope in fromIdentifier of ident: identifier‹U› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::‹anon›{ InternalType1 -> Pattern;  }, U::‹anon›{ InternalType2 -> Pattern;  }⟭]
ident.value is: U
966: ampersand called
967: &Self is: ‹anon›{ InternalType1 -> Pattern;  }
968: &other is: ‹anon›{ InternalType2 -> Pattern;  }
1183 recType is: {set{≠(_ : Object) -> Boolean, InternalType1 -> Pattern, hash -> Number, asString -> String, asDebugString -> String, :: -> Binding, basicAsString -> String, debugIterator -> Iterator, match -> Unknown, list(_ : Collection) -> List, ==(_ : Object) -> Boolean, debugValue -> String}} & ‹anon›{ InternalType2 -> Pattern;  }
1185 recType's type list is: dict⟬⟭
1184 member retType is: a noSuchType
2024: add testDec2 -> Unknown to allMethods
2009: processing call print "test succeeded"
2410 allTypes is: dict⟬T::‹anon›{ InternalType1 -> Pattern;  }, U::‹anon›{ InternalType2 -> Pattern;  }⟭
2411 publicTypes is: dict⟬T::‹anon›{ InternalType1 -> Pattern;  }, U::‹anon›{ InternalType2 -> Pattern;  }⟭
2045: internalType is { 
  ≠(_ : Object) -> Boolean; 
  U -> Pattern; 
  hash -> Number; 
  testDec2 -> Unknown; 
  asDebugString -> String; 
  testDec1 -> Unknown; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }


2046: internalType's types is dict⟬T::‹anon›{ InternalType1 -> Pattern;  }, U::‹anon›{ InternalType2 -> Pattern;  }⟭

2058: publicType is { 
  ≠(_ : Object) -> Boolean; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }


2070: checking index 1 at line 3
182: checking types of typedec T
2072: finished index 1

2070: checking index 2 at line 7
182: checking types of typedec U
2072: finished index 2

2070: checking index 3 at line 11
182: checking types of defdec testDec1
1172 is member T & U.InternalType1
1173 finding &.InternalType1
1174 memb.receiver is: op &(1)
Scope types in member search is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬$elf::{ 
  ≠(_ : Object) -> Boolean; 
  U -> Pattern; 
  hash -> Number; 
  testDec2 -> Unknown; 
  asDebugString -> String; 
  testDec1 -> Unknown; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }
, T::‹anon›{ InternalType1 -> Pattern;  }, U::‹anon›{ InternalType2 -> Pattern;  }⟭]
Scope methods in member search is: [dict⟬Done::Done -> Pattern, Boolean::Boolean -> Pattern, Set::Set -> Pattern, Number::Number -> Pattern, Object::Object -> Pattern, List::List -> Pattern, Pattern::Pattern -> Pattern, Dynamic::Dynamic -> Pattern, Binding::Binding -> Pattern, done::done -> Done, true::true -> Boolean, Point::Point -> Pattern, String::String -> Pattern, Dictionary::Dictionary -> Pattern, Range::Range -> Pattern, Sequence::Sequence -> Pattern, Unknown::Unknown -> Pattern, false::false -> Boolean⟭, dict⟬testDec2::testDec2 -> Unknown, testDec1::testDec1 -> Unknown⟭]
1141: typesScope in fromIdentifier of ident: identifier‹T› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬$elf::{ 
  ≠(_ : Object) -> Boolean; 
  U -> Pattern; 
  hash -> Number; 
  testDec2 -> Unknown; 
  asDebugString -> String; 
  testDec1 -> Unknown; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }
, T::‹anon›{ InternalType1 -> Pattern;  }, U::‹anon›{ InternalType2 -> Pattern;  }⟭]
ident.value is: T
1141: typesScope in fromIdentifier of ident: identifier‹U› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬$elf::{ 
  ≠(_ : Object) -> Boolean; 
  U -> Pattern; 
  hash -> Number; 
  testDec2 -> Unknown; 
  asDebugString -> String; 
  testDec1 -> Unknown; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }
, T::‹anon›{ InternalType1 -> Pattern;  }, U::‹anon›{ InternalType2 -> Pattern;  }⟭]
ident.value is: U
966: ampersand called
967: &Self is: ‹anon›{ InternalType1 -> Pattern;  }
968: &other is: ‹anon›{ InternalType2 -> Pattern;  }
1183 recType is: {set{≠(_ : Object) -> Boolean, InternalType1 -> Pattern, hash -> Number, asString -> String, asDebugString -> String, :: -> Binding, basicAsString -> String, debugIterator -> Iterator, match -> Unknown, list(_ : Collection) -> List, ==(_ : Object) -> Boolean, debugValue -> String}} & ‹anon›{ InternalType2 -> Pattern;  }
1185 recType's type list is: dict⟬⟭
1184 member retType is: a noSuchType
1820: defType is Unknown
182: checking types of num 47
2072: finished index 3

2070: checking index 4 at line 12
182: checking types of defdec testDec2
1172 is member T & U.InternalType2
1173 finding &.InternalType2
1174 memb.receiver is: op &(1)
Scope types in member search is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬$elf::{ 
  ≠(_ : Object) -> Boolean; 
  U -> Pattern; 
  hash -> Number; 
  testDec2 -> Unknown; 
  asDebugString -> String; 
  testDec1 -> Unknown; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }
, T::‹anon›{ InternalType1 -> Pattern;  }, U::‹anon›{ InternalType2 -> Pattern;  }⟭]
Scope methods in member search is: [dict⟬Done::Done -> Pattern, Boolean::Boolean -> Pattern, Set::Set -> Pattern, Number::Number -> Pattern, Object::Object -> Pattern, List::List -> Pattern, Pattern::Pattern -> Pattern, Dynamic::Dynamic -> Pattern, Binding::Binding -> Pattern, done::done -> Done, true::true -> Boolean, Point::Point -> Pattern, String::String -> Pattern, Dictionary::Dictionary -> Pattern, Range::Range -> Pattern, Sequence::Sequence -> Pattern, Unknown::Unknown -> Pattern, false::false -> Boolean⟭, dict⟬testDec2::testDec2 -> Unknown, testDec1::testDec1 -> Unknown⟭]
1141: typesScope in fromIdentifier of ident: identifier‹T› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬$elf::{ 
  ≠(_ : Object) -> Boolean; 
  U -> Pattern; 
  hash -> Number; 
  testDec2 -> Unknown; 
  asDebugString -> String; 
  testDec1 -> Unknown; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }
, T::‹anon›{ InternalType1 -> Pattern;  }, U::‹anon›{ InternalType2 -> Pattern;  }⟭]
ident.value is: T
1141: typesScope in fromIdentifier of ident: identifier‹U› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬$elf::{ 
  ≠(_ : Object) -> Boolean; 
  U -> Pattern; 
  hash -> Number; 
  testDec2 -> Unknown; 
  asDebugString -> String; 
  testDec1 -> Unknown; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }
, T::‹anon›{ InternalType1 -> Pattern;  }, U::‹anon›{ InternalType2 -> Pattern;  }⟭]
ident.value is: U
966: ampersand called
967: &Self is: ‹anon›{ InternalType1 -> Pattern;  }
968: &other is: ‹anon›{ InternalType2 -> Pattern;  }
1183 recType is: {set{≠(_ : Object) -> Boolean, InternalType1 -> Pattern, hash -> Number, asString -> String, asDebugString -> String, :: -> Binding, basicAsString -> String, debugIterator -> Iterator, match -> Unknown, list(_ : Collection) -> List, ==(_ : Object) -> Boolean, debugValue -> String}} & ‹anon›{ InternalType2 -> Pattern;  }
1185 recType's type list is: dict⟬⟭
1184 member retType is: a noSuchType
1820: defType is Unknown
182: checking types of string "Grace"
2072: finished index 4

2070: checking index 5 at line 14
182: checking types of call print "test succeeded"
1672: receiver is identifier‹prelude›
1673: reciever name is: prelude
182: checking types of identifier‹prelude›
182: checking types of identifier‹prelude›
1680: type of receiver identifier‹prelude› is Unknown
1681: rType is Unknown
1701: callType: Unknown
2072: finished index 5

2602 types scope is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬$elf::{ 
  ≠(_ : Object) -> Boolean; 
  U -> Pattern; 
  hash -> Number; 
  testDec2 -> Unknown; 
  asDebugString -> String; 
  testDec1 -> Unknown; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }
, T::‹anon›{ InternalType1 -> Pattern;  }, U::‹anon›{ InternalType2 -> Pattern;  }⟭]
1971: *** Visited object module t313_diffTypeInAmpersand_testconfidential type is { 
  ≠(_ : Object) -> Boolean; 
  U -> Pattern; 
  hash -> Number; 
  testDec2 -> Unknown; 
  asDebugString -> String; 
  testDec1 -> Unknown; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }

public type is { 
  ≠(_ : Object) -> Boolean; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }
minigrace[.]: t313_diffTypeInAmpersand_test: 0.95 (+0.11): generating JavaScript code.
AST nodes compiled:
    identifier	6
    defdec	2
    typeliteral	2
    method	2
    typedec	2
    member	2
    op	2
    string	2
    num	1
    dialect	1
    call	1
minigrace[.]: t313_diffTypeInAmpersand_test: 1 (+0.05): done.
NoSuchMethod on line 11 of t313_diffTypeInAmpersand_test: no method InternalType1 on TypeIntersection.new(_,_) (type T & type U).
  raised at module initialization at line 11 of t313_diffTypeInAmpersand_test
  requested on line 0 of .  10:   11: def testDec1 : (T&U).InternalType1 = 47  12: def testDec2 : (T&U).InternalType2 = "Grace"!FAIL t313_diffTypeInAmpersand_test.grace: wrong output
Errors:
NoSuchMethod on line 11 of t313_diffTypeInAmpersand_test: no method InternalType1 on TypeIntersection.new(_,_) (type T & type U).
  raised at module initialization at line 11 of t313_diffTypeInAmpersand_test
  requested on line 0 of .  10:   11: def testDec1 : (T&U).InternalType1 = 47  12: def testDec2 : (T&U).InternalType2 = "Grace"Got output:
Expected output:
test succeeded
minigrace[.]: t314_typeInVariants_test: 0.2 (+0.2): starting compilation
minigrace[.]: t314_typeInVariants_test: 0.25 (+0.05): lexing.
minigrace[.]: t314_typeInVariants_test: 0.27 (+0.02): parsing.
minigrace[.]: t314_typeInVariants_test: 0.32 (+0.05): checking dialect gradualTypesND used by module t314_typeInVariants_test
minigrace[.]: t314_typeInVariants_test: 0.57 (+0.25): loading dialect "gradualTypesND" for checkers.
minigrace[.]: t314_typeInVariants_test: 0.78 (+0.21): rewriting tree.
minigrace[.]: t314_typeInVariants_test: 0.82 (+0.04): symbol tables built.

1958: superclass: false

matched as typeDec
matched as typeDec
didn't match as typeDec
didn't match as typeDec
1141: typesScope in fromIdentifier of ident: identifier‹Number› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
, U::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
⟭]
ident.value is: Number
2518 The type name is: T and it has embedded types of: dict⟬InternalType::Number⟭
2518.5 The type itself is: ‹anon›{ InternalType -> Pattern;  }
1141: typesScope in fromIdentifier of ident: identifier‹Number› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  InternalType -> Pattern; 
  debugValue -> String; }
, U::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
⟭]
ident.value is: Number
2518 The type name is: U and it has embedded types of: dict⟬InternalType::Number⟭
2518.5 The type itself is: ‹anon›{ InternalType -> Pattern;  }
1965: hasInherits is false

1989: superType is Object

2009: processing typedec T
1141: typesScope in fromIdentifier of ident: identifier‹Number› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  InternalType -> Pattern; 
  debugValue -> String; }
, U::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  InternalType -> Pattern; 
  debugValue -> String; }
⟭]
ident.value is: Number
2493 mType is: T -> Pattern
2009: processing typedec U
1141: typesScope in fromIdentifier of ident: identifier‹Number› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::‹anon›{ InternalType -> Pattern;  }, U::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  InternalType -> Pattern; 
  debugValue -> String; }
⟭]
ident.value is: Number
2493 mType is: U -> Pattern
2009: processing defdec testDec
2022: in def or var case
574: defd: defdec testDec
575: defd.dtype T | U.InternalType
1172 is member T | U.InternalType
1173 finding |.InternalType
1174 memb.receiver is: op |(1)
Scope types in member search is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::‹anon›{ InternalType -> Pattern;  }, U::‹anon›{ InternalType -> Pattern;  }⟭]
Scope methods in member search is: [dict⟬Done::Done -> Pattern, Boolean::Boolean -> Pattern, Set::Set -> Pattern, Number::Number -> Pattern, Object::Object -> Pattern, List::List -> Pattern, Pattern::Pattern -> Pattern, Dynamic::Dynamic -> Pattern, Binding::Binding -> Pattern, done::done -> Done, true::true -> Boolean, Point::Point -> Pattern, String::String -> Pattern, Dictionary::Dictionary -> Pattern, Range::Range -> Pattern, Sequence::Sequence -> Pattern, Unknown::Unknown -> Pattern, false::false -> Boolean⟭, dict⟬⟭]
1141: typesScope in fromIdentifier of ident: identifier‹T› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::‹anon›{ InternalType -> Pattern;  }, U::‹anon›{ InternalType -> Pattern;  }⟭]
ident.value is: T
1141: typesScope in fromIdentifier of ident: identifier‹U› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::‹anon›{ InternalType -> Pattern;  }, U::‹anon›{ InternalType -> Pattern;  }⟭]
ident.value is: U
1183 recType is: ‹anon›{ InternalType -> Pattern;  } | ‹anon›{ InternalType -> Pattern;  }
1185 recType's type list is: dict⟬⟭
1184 member retType is: a noSuchType
2024: add testDec -> Unknown to allMethods
2009: processing call print "test succeeded"
2410 allTypes is: dict⟬T::‹anon›{ InternalType -> Pattern;  }, U::‹anon›{ InternalType -> Pattern;  }⟭
2411 publicTypes is: dict⟬T::‹anon›{ InternalType -> Pattern;  }, U::‹anon›{ InternalType -> Pattern;  }⟭
2045: internalType is { 
  ≠(_ : Object) -> Boolean; 
  testDec -> Unknown; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }


2046: internalType's types is dict⟬T::‹anon›{ InternalType -> Pattern;  }, U::‹anon›{ InternalType -> Pattern;  }⟭

2058: publicType is { 
  ≠(_ : Object) -> Boolean; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }


2070: checking index 1 at line 3
182: checking types of typedec T
2072: finished index 1

2070: checking index 2 at line 7
182: checking types of typedec U
2072: finished index 2

2070: checking index 3 at line 11
182: checking types of defdec testDec
1172 is member T | U.InternalType
1173 finding |.InternalType
1174 memb.receiver is: op |(1)
Scope types in member search is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬$elf::{ 
  ≠(_ : Object) -> Boolean; 
  testDec -> Unknown; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }
, T::‹anon›{ InternalType -> Pattern;  }, U::‹anon›{ InternalType -> Pattern;  }⟭]
Scope methods in member search is: [dict⟬Done::Done -> Pattern, Boolean::Boolean -> Pattern, Set::Set -> Pattern, Number::Number -> Pattern, Object::Object -> Pattern, List::List -> Pattern, Pattern::Pattern -> Pattern, Dynamic::Dynamic -> Pattern, Binding::Binding -> Pattern, done::done -> Done, true::true -> Boolean, Point::Point -> Pattern, String::String -> Pattern, Dictionary::Dictionary -> Pattern, Range::Range -> Pattern, Sequence::Sequence -> Pattern, Unknown::Unknown -> Pattern, false::false -> Boolean⟭, dict⟬testDec::testDec -> Unknown⟭]
1141: typesScope in fromIdentifier of ident: identifier‹T› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬$elf::{ 
  ≠(_ : Object) -> Boolean; 
  testDec -> Unknown; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }
, T::‹anon›{ InternalType -> Pattern;  }, U::‹anon›{ InternalType -> Pattern;  }⟭]
ident.value is: T
1141: typesScope in fromIdentifier of ident: identifier‹U› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬$elf::{ 
  ≠(_ : Object) -> Boolean; 
  testDec -> Unknown; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }
, T::‹anon›{ InternalType -> Pattern;  }, U::‹anon›{ InternalType -> Pattern;  }⟭]
ident.value is: U
1183 recType is: ‹anon›{ InternalType -> Pattern;  } | ‹anon›{ InternalType -> Pattern;  }
1185 recType's type list is: dict⟬⟭
1184 member retType is: a noSuchType
1820: defType is Unknown
182: checking types of num 47
2072: finished index 3

2070: checking index 4 at line 13
182: checking types of call print "test succeeded"
1672: receiver is identifier‹prelude›
1673: reciever name is: prelude
182: checking types of identifier‹prelude›
182: checking types of identifier‹prelude›
1680: type of receiver identifier‹prelude› is Unknown
1681: rType is Unknown
1701: callType: Unknown
2072: finished index 4

2602 types scope is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬$elf::{ 
  ≠(_ : Object) -> Boolean; 
  testDec -> Unknown; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }
, T::‹anon›{ InternalType -> Pattern;  }, U::‹anon›{ InternalType -> Pattern;  }⟭]
1971: *** Visited object module t314_typeInVariants_testconfidential type is { 
  ≠(_ : Object) -> Boolean; 
  testDec -> Unknown; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }

public type is { 
  ≠(_ : Object) -> Boolean; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }
minigrace[.]: t314_typeInVariants_test: 0.9 (+0.08): generating JavaScript code.
AST nodes compiled:
    identifier	4
    typeliteral	2
    method	2
    typedec	2
    defdec	1
    dialect	1
    num	1
    member	1
    op	1
    call	1
    string	1
minigrace[.]: t314_typeInVariants_test: 0.95 (+0.05): done.
NoSuchMethod on line 11 of t314_typeInVariants_test: no method InternalType on TypeVariant.new(_,_) (type T | type U).
  raised at module initialization at line 11 of t314_typeInVariants_test
  requested on line 0 of .  10:   11: def testDec : (T|U).InternalType = 47  12: !FAIL t314_typeInVariants_test.grace: wrong output
Errors:
NoSuchMethod on line 11 of t314_typeInVariants_test: no method InternalType on TypeVariant.new(_,_) (type T | type U).
  raised at module initialization at line 11 of t314_typeInVariants_test
  requested on line 0 of .  10:   11: def testDec : (T|U).InternalType = 47  12: Got output:
Expected output:
test succeeded
minigrace[.]: t317_typeInNestedTypes_test: 0.21 (+0.21): starting compilation
minigrace[.]: t317_typeInNestedTypes_test: 0.26 (+0.05): lexing.
minigrace[.]: t317_typeInNestedTypes_test: 0.28 (+0.02): parsing.
minigrace[.]: t317_typeInNestedTypes_test: 0.33 (+0.05): checking dialect gradualTypesND used by module t317_typeInNestedTypes_test
minigrace[.]: t317_typeInNestedTypes_test: 0.57 (+0.24): loading dialect "gradualTypesND" for checkers.
minigrace[.]: t317_typeInNestedTypes_test: 0.78 (+0.21): rewriting tree.
minigrace[.]: t317_typeInNestedTypes_test: 0.83 (+0.05): symbol tables built.

1958: superclass: false

matched as typeDec
didn't match as typeDec
didn't match as typeDec
didn't match as typeDec
1141: typesScope in fromIdentifier of ident: identifier‹Number› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬U::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
⟭]
ident.value is: Number
2518 The type name is: U and it has embedded types of: dict⟬V::‹anon›{ T -> Pattern;  }⟭
2518.5 The type itself is: ‹anon›{ V -> Pattern;  }
1965: hasInherits is false

1989: superType is Object

2009: processing typedec U
1141: typesScope in fromIdentifier of ident: identifier‹Number› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬U::{ 
  ≠(_ : Object) -> Boolean; 
  V -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
⟭]
ident.value is: Number
2493 mType is: U -> Pattern
2009: processing defdec o
2022: in def or var case
574: defd: defdec o
575: defd.dtype identifier‹U›
1141: typesScope in fromIdentifier of ident: identifier‹U› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬U::‹anon›{ V -> Pattern;  }⟭]
ident.value is: U
2024: add o -> ‹anon›{ V -> Pattern;  } to allMethods
2009: processing defdec testDec
2022: in def or var case
574: defd: defdec testDec
575: defd.dtype o.V.T
1172 is member o.V.T
1173 finding V.T
1174 memb.receiver is: o.V
Scope types in member search is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬U::‹anon›{ V -> Pattern;  }⟭]
Scope methods in member search is: [dict⟬Done::Done -> Pattern, Boolean::Boolean -> Pattern, Set::Set -> Pattern, Number::Number -> Pattern, Object::Object -> Pattern, List::List -> Pattern, Pattern::Pattern -> Pattern, Dynamic::Dynamic -> Pattern, Binding::Binding -> Pattern, done::done -> Done, true::true -> Boolean, Point::Point -> Pattern, String::String -> Pattern, Dictionary::Dictionary -> Pattern, Range::Range -> Pattern, Sequence::Sequence -> Pattern, Unknown::Unknown -> Pattern, false::false -> Boolean⟭, dict⟬o::o -> ‹anon›{ V -> Pattern;  }⟭]
1172 is member o.V
1173 finding o.V
1174 memb.receiver is: identifier‹o›
Scope types in member search is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬U::‹anon›{ V -> Pattern;  }⟭]
Scope methods in member search is: [dict⟬Done::Done -> Pattern, Boolean::Boolean -> Pattern, Set::Set -> Pattern, Number::Number -> Pattern, Object::Object -> Pattern, List::List -> Pattern, Pattern::Pattern -> Pattern, Dynamic::Dynamic -> Pattern, Binding::Binding -> Pattern, done::done -> Done, true::true -> Boolean, Point::Point -> Pattern, String::String -> Pattern, Dictionary::Dictionary -> Pattern, Range::Range -> Pattern, Sequence::Sequence -> Pattern, Unknown::Unknown -> Pattern, false::false -> Boolean⟭, dict⟬o::o -> ‹anon›{ V -> Pattern;  }⟭]
1183 recType is: ‹anon›{ V -> Pattern;  }
1185 recType's type list is: dict⟬V::‹anon›{ T -> Pattern;  }⟭
1184 member retType is: ‹anon›{ T -> Pattern;  }
1183 recType is: ‹anon›{ T -> Pattern;  }
1185 recType's type list is: dict⟬T::Number⟭
1184 member retType is: Number
2024: add testDec -> Number to allMethods
2009: processing call print "test succeeded"
2410 allTypes is: dict⟬U::‹anon›{ V -> Pattern;  }⟭
2411 publicTypes is: dict⟬U::‹anon›{ V -> Pattern;  }⟭
2045: internalType is { 
  ≠(_ : Object) -> Boolean; 
  testDec -> Number; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  o -> ‹anon›{ V -> Pattern;  }; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }


2046: internalType's types is dict⟬U::‹anon›{ V -> Pattern;  }⟭

2058: publicType is { 
  ≠(_ : Object) -> Boolean; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }


2070: checking index 1 at line 3
182: checking types of typedec U
2072: finished index 1

2070: checking index 2 at line 9
182: checking types of defdec o
1141: typesScope in fromIdentifier of ident: identifier‹U› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬$elf::{ 
  ≠(_ : Object) -> Boolean; 
  testDec -> Number; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  o -> ‹anon›{ V -> Pattern;  }; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
, U::‹anon›{ V -> Pattern;  }⟭]
ident.value is: U
1820: defType is ‹anon›{ V -> Pattern;  }
182: checking types of object o
1958: superclass: false

matched as typeDec
1141: typesScope in fromIdentifier of ident: identifier‹Number› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬$elf::{ 
  ≠(_ : Object) -> Boolean; 
  testDec -> Number; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  o -> ‹anon›{ V -> Pattern;  }; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
, U::‹anon›{ V -> Pattern;  }⟭, dict⟬V::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
⟭]
ident.value is: Number
2518 The type name is: V and it has embedded types of: dict⟬T::Number⟭
2518.5 The type itself is: ‹anon›{ T -> Pattern;  }
1965: hasInherits is false

1989: superType is Object

2009: processing typedec V
1141: typesScope in fromIdentifier of ident: identifier‹Number› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬$elf::{ 
  ≠(_ : Object) -> Boolean; 
  testDec -> Number; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  o -> ‹anon›{ V -> Pattern;  }; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
, U::‹anon›{ V -> Pattern;  }⟭, dict⟬V::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }
⟭]
ident.value is: Number
2493 mType is: V -> Pattern
2410 allTypes is: dict⟬V::‹anon›{ T -> Pattern;  }⟭
2411 publicTypes is: dict⟬V::‹anon›{ T -> Pattern;  }⟭
2045: internalType is { 
  ≠(_ : Object) -> Boolean; 
  V -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }


2046: internalType's types is dict⟬V::‹anon›{ T -> Pattern;  }⟭

2058: publicType is { 
  ≠(_ : Object) -> Boolean; 
  V -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }


2070: checking index 1 at line 10
182: checking types of typedec V
2072: finished index 1

2602 types scope is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬$elf::{ 
  ≠(_ : Object) -> Boolean; 
  testDec -> Number; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  o -> ‹anon›{ V -> Pattern;  }; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
, U::‹anon›{ V -> Pattern;  }⟭, dict⟬$elf::{ 
  ≠(_ : Object) -> Boolean; 
  V -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
, V::‹anon›{ T -> Pattern;  }⟭]
1971: *** Visited object object oconfidential type is { 
  ≠(_ : Object) -> Boolean; 
  V -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }

public type is { 
  ≠(_ : Object) -> Boolean; 
  V -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }

829 otherTypes is dict⟬V::‹anon›{ T -> Pattern;  }⟭
830 selfTypes is dict⟬V::‹anon›{ T -> Pattern;  }⟭
829 otherTypes is dict⟬T::Number⟭
830 selfTypes is dict⟬T::Number⟭
2072: finished index 2

2070: checking index 3 at line 15
182: checking types of defdec testDec
1172 is member o.V.T
1173 finding V.T
1174 memb.receiver is: o.V
Scope types in member search is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬$elf::{ 
  ≠(_ : Object) -> Boolean; 
  testDec -> Number; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  o -> ‹anon›{ V -> Pattern;  }; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
, U::‹anon›{ V -> Pattern;  }⟭]
Scope methods in member search is: [dict⟬Done::Done -> Pattern, Boolean::Boolean -> Pattern, Set::Set -> Pattern, Number::Number -> Pattern, Object::Object -> Pattern, List::List -> Pattern, Pattern::Pattern -> Pattern, Dynamic::Dynamic -> Pattern, Binding::Binding -> Pattern, done::done -> Done, true::true -> Boolean, Point::Point -> Pattern, String::String -> Pattern, Dictionary::Dictionary -> Pattern, Range::Range -> Pattern, Sequence::Sequence -> Pattern, Unknown::Unknown -> Pattern, false::false -> Boolean⟭, dict⟬testDec::testDec -> Number, o::o -> ‹anon›{ V -> Pattern;  }⟭]
1172 is member o.V
1173 finding o.V
1174 memb.receiver is: identifier‹o›
Scope types in member search is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬$elf::{ 
  ≠(_ : Object) -> Boolean; 
  testDec -> Number; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  o -> ‹anon›{ V -> Pattern;  }; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
, U::‹anon›{ V -> Pattern;  }⟭]
Scope methods in member search is: [dict⟬Done::Done -> Pattern, Boolean::Boolean -> Pattern, Set::Set -> Pattern, Number::Number -> Pattern, Object::Object -> Pattern, List::List -> Pattern, Pattern::Pattern -> Pattern, Dynamic::Dynamic -> Pattern, Binding::Binding -> Pattern, done::done -> Done, true::true -> Boolean, Point::Point -> Pattern, String::String -> Pattern, Dictionary::Dictionary -> Pattern, Range::Range -> Pattern, Sequence::Sequence -> Pattern, Unknown::Unknown -> Pattern, false::false -> Boolean⟭, dict⟬testDec::testDec -> Number, o::o -> ‹anon›{ V -> Pattern;  }⟭]
1183 recType is: ‹anon›{ V -> Pattern;  }
1185 recType's type list is: dict⟬V::‹anon›{ T -> Pattern;  }⟭
1184 member retType is: ‹anon›{ T -> Pattern;  }
1183 recType is: ‹anon›{ T -> Pattern;  }
1185 recType's type list is: dict⟬T::Number⟭
1184 member retType is: Number
1820: defType is Number
182: checking types of num 3
2072: finished index 3

2070: checking index 4 at line 17
182: checking types of call print "test succeeded"
1672: receiver is identifier‹prelude›
1673: reciever name is: prelude
182: checking types of identifier‹prelude›
182: checking types of identifier‹prelude›
1680: type of receiver identifier‹prelude› is Unknown
1681: rType is Unknown
1701: callType: Unknown
2072: finished index 4

2602 types scope is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬$elf::{ 
  ≠(_ : Object) -> Boolean; 
  testDec -> Number; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  o -> ‹anon›{ V -> Pattern;  }; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
, U::‹anon›{ V -> Pattern;  }⟭]
1971: *** Visited object module t317_typeInNestedTypes_testconfidential type is { 
  ≠(_ : Object) -> Boolean; 
  testDec -> Number; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  o -> ‹anon›{ V -> Pattern;  }; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }

public type is { 
  ≠(_ : Object) -> Boolean; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
minigrace[.]: t317_typeInNestedTypes_test: 0.94 (+0.11): generating JavaScript code.
AST nodes compiled:
    identifier	3
    defdec	2
    typeliteral	2
    member	2
    dialect	1
    typedec	1
    object	1
    num	1
    method	1
    call	1
    string	1
minigrace[.]: t317_typeInNestedTypes_test: 0.98 (+0.04): done.
NoSuchMethod on line 15 of t317_typeInNestedTypes_test: no method T on Type type V.
  raised at module initialization at line 15 of t317_typeInNestedTypes_test
  requested on line 0 of .  14:   15: def testDec: o.V.T = 3  16: !FAIL t317_typeInNestedTypes_test.grace: wrong output
Errors:
NoSuchMethod on line 15 of t317_typeInNestedTypes_test: no method T on Type type V.
  raised at module initialization at line 15 of t317_typeInNestedTypes_test
  requested on line 0 of .  14:   15: def testDec: o.V.T = 3  16: Got output:
Expected output:
test succeeded
minigrace[.]: t331_ampersandEmbeddedTypes_test: 0.2 (+0.2): starting compilation
minigrace[.]: t331_ampersandEmbeddedTypes_test: 0.24 (+0.04): lexing.
minigrace[.]: t331_ampersandEmbeddedTypes_test: 0.26 (+0.02): parsing.
minigrace[.]: t331_ampersandEmbeddedTypes_test: 0.32 (+0.06): checking dialect gradualTypesND used by module t331_ampersandEmbeddedTypes_test
minigrace[.]: t331_ampersandEmbeddedTypes_test: 0.56 (+0.24): loading dialect "gradualTypesND" for checkers.
minigrace[.]: t331_ampersandEmbeddedTypes_test: 0.78 (+0.22): rewriting tree.
minigrace[.]: t331_ampersandEmbeddedTypes_test: 0.81 (+0.03): symbol tables built.

1958: superclass: false

matched as typeDec
matched as typeDec
didn't match as typeDec
didn't match as typeDec
didn't match as typeDec
1141: typesScope in fromIdentifier of ident: identifier‹Number› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
, U::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
⟭]
ident.value is: Number
2518 The type name is: T and it has embedded types of: dict⟬internalType1::Number⟭
2518.5 The type itself is: ‹anon›{ internalType1 -> Pattern;  }
1141: typesScope in fromIdentifier of ident: identifier‹Number› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  internalType1 -> Pattern; }
, U::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; }
⟭]
ident.value is: Number
2518 The type name is: U and it has embedded types of: dict⟬internalType2::Number⟭
2518.5 The type itself is: ‹anon›{ internalType2 -> Pattern;  }
1965: hasInherits is false

1989: superType is Object

2009: processing typedec T
1141: typesScope in fromIdentifier of ident: identifier‹Number› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  internalType1 -> Pattern; }
, U::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  internalType2 -> Pattern; }
⟭]
ident.value is: Number
2493 mType is: T -> Pattern
2009: processing typedec U
1141: typesScope in fromIdentifier of ident: identifier‹Number› is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::‹anon›{ internalType1 -> Pattern;  }, U::{ 
  ≠(_ : Object) -> Boolean; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  internalType2 -> Pattern; }
⟭]
ident.value is: Number
2493 mType is: U -> Pattern
2009: processing defdec x
2022: in def or var case
574: defd: defdec x
575: defd.dtype op &(1)
1172 is member T.internalType1
1173 finding T.internalType1
1174 memb.receiver is: identifier‹T›
Scope types in member search is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::‹anon›{ internalType1 -> Pattern;  }, U::‹anon›{ internalType2 -> Pattern;  }⟭]
Scope methods in member search is: [dict⟬Done::Done -> Pattern, Boolean::Boolean -> Pattern, Set::Set -> Pattern, Number::Number -> Pattern, Object::Object -> Pattern, List::List -> Pattern, Pattern::Pattern -> Pattern, Dynamic::Dynamic -> Pattern, Binding::Binding -> Pattern, done::done -> Done, true::true -> Boolean, Point::Point -> Pattern, String::String -> Pattern, Dictionary::Dictionary -> Pattern, Range::Range -> Pattern, Sequence::Sequence -> Pattern, Unknown::Unknown -> Pattern, false::false -> Boolean⟭, dict⟬⟭]
1183 recType is: ‹anon›{ internalType1 -> Pattern;  }
1185 recType's type list is: dict⟬internalType1::Number⟭
1184 member retType is: Number
1172 is member U.internalType2
1173 finding U.internalType2
1174 memb.receiver is: identifier‹U›
Scope types in member search is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬T::‹anon›{ internalType1 -> Pattern;  }, U::‹anon›{ internalType2 -> Pattern;  }⟭]
Scope methods in member search is: [dict⟬Done::Done -> Pattern, Boolean::Boolean -> Pattern, Set::Set -> Pattern, Number::Number -> Pattern, Object::Object -> Pattern, List::List -> Pattern, Pattern::Pattern -> Pattern, Dynamic::Dynamic -> Pattern, Binding::Binding -> Pattern, done::done -> Done, true::true -> Boolean, Point::Point -> Pattern, String::String -> Pattern, Dictionary::Dictionary -> Pattern, Range::Range -> Pattern, Sequence::Sequence -> Pattern, Unknown::Unknown -> Pattern, false::false -> Boolean⟭, dict⟬⟭]
1183 recType is: ‹anon›{ internalType2 -> Pattern;  }
1185 recType's type list is: dict⟬internalType2::Number⟭
1184 member retType is: Number
966: ampersand called
967: &Self is: Number
968: &other is: Number
2024: add x -> Number to allMethods
2009: processing call print("" ++ x ++ "")
2009: processing call print "Test Succeeded"
2410 allTypes is: dict⟬T::‹anon›{ internalType1 -> Pattern;  }, U::‹anon›{ internalType2 -> Pattern;  }⟭
2411 publicTypes is: dict⟬T::‹anon›{ internalType1 -> Pattern;  }, U::‹anon›{ internalType2 -> Pattern;  }⟭
2045: internalType is { 
  ≠(_ : Object) -> Boolean; 
  U -> Pattern; 
  hash -> Number; 
  x -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }


2046: internalType's types is dict⟬T::‹anon›{ internalType1 -> Pattern;  }, U::‹anon›{ internalType2 -> Pattern;  }⟭

2058: publicType is { 
  ≠(_ : Object) -> Boolean; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }


2070: checking index 1 at line 3
182: checking types of typedec T
2072: finished index 1

2070: checking index 2 at line 7
182: checking types of typedec U
2072: finished index 2

2070: checking index 3 at line 11
182: checking types of defdec x
1172 is member T.internalType1
1173 finding T.internalType1
1174 memb.receiver is: identifier‹T›
Scope types in member search is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬$elf::{ 
  ≠(_ : Object) -> Boolean; 
  U -> Pattern; 
  hash -> Number; 
  x -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }
, T::‹anon›{ internalType1 -> Pattern;  }, U::‹anon›{ internalType2 -> Pattern;  }⟭]
Scope methods in member search is: [dict⟬Done::Done -> Pattern, Boolean::Boolean -> Pattern, Set::Set -> Pattern, Number::Number -> Pattern, Object::Object -> Pattern, List::List -> Pattern, Pattern::Pattern -> Pattern, Dynamic::Dynamic -> Pattern, Binding::Binding -> Pattern, done::done -> Done, true::true -> Boolean, Point::Point -> Pattern, String::String -> Pattern, Dictionary::Dictionary -> Pattern, Range::Range -> Pattern, Sequence::Sequence -> Pattern, Unknown::Unknown -> Pattern, false::false -> Boolean⟭, dict⟬x::x -> Number⟭]
1183 recType is: ‹anon›{ internalType1 -> Pattern;  }
1185 recType's type list is: dict⟬internalType1::Number⟭
1184 member retType is: Number
1172 is member U.internalType2
1173 finding U.internalType2
1174 memb.receiver is: identifier‹U›
Scope types in member search is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬$elf::{ 
  ≠(_ : Object) -> Boolean; 
  U -> Pattern; 
  hash -> Number; 
  x -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }
, T::‹anon›{ internalType1 -> Pattern;  }, U::‹anon›{ internalType2 -> Pattern;  }⟭]
Scope methods in member search is: [dict⟬Done::Done -> Pattern, Boolean::Boolean -> Pattern, Set::Set -> Pattern, Number::Number -> Pattern, Object::Object -> Pattern, List::List -> Pattern, Pattern::Pattern -> Pattern, Dynamic::Dynamic -> Pattern, Binding::Binding -> Pattern, done::done -> Done, true::true -> Boolean, Point::Point -> Pattern, String::String -> Pattern, Dictionary::Dictionary -> Pattern, Range::Range -> Pattern, Sequence::Sequence -> Pattern, Unknown::Unknown -> Pattern, false::false -> Boolean⟭, dict⟬x::x -> Number⟭]
1183 recType is: ‹anon›{ internalType2 -> Pattern;  }
1185 recType's type list is: dict⟬internalType2::Number⟭
1184 member retType is: Number
966: ampersand called
967: &Self is: Number
968: &other is: Number
1820: defType is Number
182: checking types of num 47
2072: finished index 3

2070: checking index 4 at line 13
182: checking types of call print("" ++ x ++ "")
1672: receiver is identifier‹prelude›
1673: reciever name is: prelude
182: checking types of identifier‹prelude›
182: checking types of identifier‹prelude›
1680: type of receiver identifier‹prelude› is Unknown
1681: rType is Unknown
1701: callType: Unknown
1672: receiver is op ++(1)
1673: reciever name is: ++(1)
182: checking types of op ++(1)
1672: receiver is string ""
1673: reciever name is: ?
182: checking types of string ""
182: checking types of string ""
1680: type of receiver string "" is String
1681: rType is String
request on ++(1)
1999: rType.getTypeList is: dict⟬⟭ and name is ++(1)
2000: rType.methods is: set{asUpper -> String, ord -> Number, hash -> Number, ++(_ : Object) -> String, asString -> String, _escape -> String, replace(_ : String)with(_ : String) -> String, encode -> String, iter -> Iterator, substringFrom(_ : Number)to(_ : Number) -> String, trim -> String, asNumber -> Number, contains(_ : String) -> Boolean, <=(_ : String) -> Boolean, startsWithLetter -> Boolean, &(_ : Pattern) -> Pattern, indexOf(_ : String) -> Number, startsWithPeriod -> Boolean, *(_ : Number) -> String, at(_ : Number) -> String, capitalized -> String, endsWith(_ : String) -> Boolean, startsWith(_ : String) -> Boolean, match -> Unknown, list(_ : Collection) -> List, startsWithSpace -> Boolean, ==(_ : Object) -> Boolean, asLower -> String, indexOf(_ : String)startingAt(_ : Number) -> Number, <(_ : String) -> Boolean, isEmpty -> Boolean, >(_ : String) -> Boolean, compare(_ : String) -> Boolean, lastIndexOf(_ : String) -> Number, startsWithDigit -> Boolean, >=(_ : String) -> Boolean, basicAsString -> String, debugValue -> String, iterator -> Object, ≠(_ : Object) -> Boolean, ≤(_ : String) -> Boolean, ≥(_ : String) -> Boolean, lastIndexOf(_ : String)startingAt(_ : Number) -> Number, indices -> List, do(_ : Block{ apply(_ : String) -> Done;  }) -> Done, asDebugString -> String, :: -> Binding, debugIterator -> Iterator, size -> Number, substringFrom(_ : Number)size(_ : Number) -> String}
checking request op ++(1) against ++(_ : Object) -> String
182: checking types of identifier‹x›
1631 Checking identifier‹x› is subtype of Object
while checking op ++(1) against ++(_ : Object) -> String
182: checking types of identifier‹x›
829 otherTypes is dict⟬⟭
830 selfTypes is dict⟬⟭
1701: callType: String
182: checking types of op ++(1)
1672: receiver is string ""
1673: reciever name is: ?
182: checking types of string ""
182: checking types of string ""
1680: type of receiver string "" is String
1681: rType is String
request on ++(1)
1999: rType.getTypeList is: dict⟬⟭ and name is ++(1)
2000: rType.methods is: set{asUpper -> String, ord -> Number, hash -> Number, ++(_ : Object) -> String, asString -> String, _escape -> String, replace(_ : String)with(_ : String) -> String, encode -> String, iter -> Iterator, substringFrom(_ : Number)to(_ : Number) -> String, trim -> String, asNumber -> Number, contains(_ : String) -> Boolean, <=(_ : String) -> Boolean, startsWithLetter -> Boolean, &(_ : Pattern) -> Pattern, indexOf(_ : String) -> Number, startsWithPeriod -> Boolean, *(_ : Number) -> String, at(_ : Number) -> String, capitalized -> String, endsWith(_ : String) -> Boolean, startsWith(_ : String) -> Boolean, match -> Unknown, list(_ : Collection) -> List, startsWithSpace -> Boolean, ==(_ : Object) -> Boolean, asLower -> String, indexOf(_ : String)startingAt(_ : Number) -> Number, <(_ : String) -> Boolean, isEmpty -> Boolean, >(_ : String) -> Boolean, compare(_ : String) -> Boolean, lastIndexOf(_ : String) -> Number, startsWithDigit -> Boolean, >=(_ : String) -> Boolean, basicAsString -> String, debugValue -> String, iterator -> Object, ≠(_ : Object) -> Boolean, ≤(_ : String) -> Boolean, ≥(_ : String) -> Boolean, lastIndexOf(_ : String)startingAt(_ : Number) -> Number, indices -> List, do(_ : Block{ apply(_ : String) -> Done;  }) -> Done, asDebugString -> String, :: -> Binding, debugIterator -> Iterator, size -> Number, substringFrom(_ : Number)size(_ : Number) -> String}
checking request op ++(1) against ++(_ : Object) -> String
182: checking types of identifier‹x›
1631 Checking identifier‹x› is subtype of Object
while checking op ++(1) against ++(_ : Object) -> String
182: checking types of identifier‹x›
829 otherTypes is dict⟬⟭
830 selfTypes is dict⟬⟭
1701: callType: String
1680: type of receiver op ++(1) is String
1681: rType is String
request on ++(1)
1999: rType.getTypeList is: dict⟬⟭ and name is ++(1)
2000: rType.methods is: set{asUpper -> String, ord -> Number, hash -> Number, ++(_ : Object) -> String, asString -> String, _escape -> String, replace(_ : String)with(_ : String) -> String, encode -> String, iter -> Iterator, substringFrom(_ : Number)to(_ : Number) -> String, trim -> String, asNumber -> Number, contains(_ : String) -> Boolean, <=(_ : String) -> Boolean, startsWithLetter -> Boolean, &(_ : Pattern) -> Pattern, indexOf(_ : String) -> Number, startsWithPeriod -> Boolean, *(_ : Number) -> String, at(_ : Number) -> String, capitalized -> String, endsWith(_ : String) -> Boolean, startsWith(_ : String) -> Boolean, match -> Unknown, list(_ : Collection) -> List, startsWithSpace -> Boolean, ==(_ : Object) -> Boolean, asLower -> String, indexOf(_ : String)startingAt(_ : Number) -> Number, <(_ : String) -> Boolean, isEmpty -> Boolean, >(_ : String) -> Boolean, compare(_ : String) -> Boolean, lastIndexOf(_ : String) -> Number, startsWithDigit -> Boolean, >=(_ : String) -> Boolean, basicAsString -> String, debugValue -> String, iterator -> Object, ≠(_ : Object) -> Boolean, ≤(_ : String) -> Boolean, ≥(_ : String) -> Boolean, lastIndexOf(_ : String)startingAt(_ : Number) -> Number, indices -> List, do(_ : Block{ apply(_ : String) -> Done;  }) -> Done, asDebugString -> String, :: -> Binding, debugIterator -> Iterator, size -> Number, substringFrom(_ : Number)size(_ : Number) -> String}
checking request op ++(1) against ++(_ : Object) -> String
182: checking types of string ""
1631 Checking string "" is subtype of Object
while checking op ++(1) against ++(_ : Object) -> String
182: checking types of string ""
829 otherTypes is dict⟬⟭
830 selfTypes is dict⟬⟭
1701: callType: String
1672: receiver is string ""
1673: reciever name is: ?
182: checking types of string ""
182: checking types of string ""
1680: type of receiver string "" is String
1681: rType is String
request on ++(1)
1999: rType.getTypeList is: dict⟬⟭ and name is ++(1)
2000: rType.methods is: set{asUpper -> String, ord -> Number, hash -> Number, ++(_ : Object) -> String, asString -> String, _escape -> String, replace(_ : String)with(_ : String) -> String, encode -> String, iter -> Iterator, substringFrom(_ : Number)to(_ : Number) -> String, trim -> String, asNumber -> Number, contains(_ : String) -> Boolean, <=(_ : String) -> Boolean, startsWithLetter -> Boolean, &(_ : Pattern) -> Pattern, indexOf(_ : String) -> Number, startsWithPeriod -> Boolean, *(_ : Number) -> String, at(_ : Number) -> String, capitalized -> String, endsWith(_ : String) -> Boolean, startsWith(_ : String) -> Boolean, match -> Unknown, list(_ : Collection) -> List, startsWithSpace -> Boolean, ==(_ : Object) -> Boolean, asLower -> String, indexOf(_ : String)startingAt(_ : Number) -> Number, <(_ : String) -> Boolean, isEmpty -> Boolean, >(_ : String) -> Boolean, compare(_ : String) -> Boolean, lastIndexOf(_ : String) -> Number, startsWithDigit -> Boolean, >=(_ : String) -> Boolean, basicAsString -> String, debugValue -> String, iterator -> Object, ≠(_ : Object) -> Boolean, ≤(_ : String) -> Boolean, ≥(_ : String) -> Boolean, lastIndexOf(_ : String)startingAt(_ : Number) -> Number, indices -> List, do(_ : Block{ apply(_ : String) -> Done;  }) -> Done, asDebugString -> String, :: -> Binding, debugIterator -> Iterator, size -> Number, substringFrom(_ : Number)size(_ : Number) -> String}
checking request op ++(1) against ++(_ : Object) -> String
182: checking types of identifier‹x›
1631 Checking identifier‹x› is subtype of Object
while checking op ++(1) against ++(_ : Object) -> String
182: checking types of identifier‹x›
829 otherTypes is dict⟬⟭
830 selfTypes is dict⟬⟭
1701: callType: String
2072: finished index 4

2070: checking index 5 at line 14
182: checking types of call print "Test Succeeded"
1672: receiver is identifier‹prelude›
1673: reciever name is: prelude
182: checking types of identifier‹prelude›
182: checking types of identifier‹prelude›
1680: type of receiver identifier‹prelude› is Unknown
1681: rType is Unknown
1701: callType: Unknown
2072: finished index 5

2602 types scope is: [dict⟬Done::Done, Point::Point, String::String, Set::Set, Range::Range, Object::Object, Sequence::Sequence, Unknown::Unknown, List::List, Pattern::Pattern, Number::Number, Boolean::Boolean, Binding::Binding, Dictionary::Dictionary⟭, dict⟬$elf::{ 
  ≠(_ : Object) -> Boolean; 
  U -> Pattern; 
  hash -> Number; 
  x -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }
, T::‹anon›{ internalType1 -> Pattern;  }, U::‹anon›{ internalType2 -> Pattern;  }⟭]
1971: *** Visited object module t331_ampersandEmbeddedTypes_testconfidential type is { 
  ≠(_ : Object) -> Boolean; 
  U -> Pattern; 
  hash -> Number; 
  x -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  isMe(other : Object) -> Boolean; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }

public type is { 
  ≠(_ : Object) -> Boolean; 
  U -> Pattern; 
  hash -> Number; 
  asDebugString -> String; 
  :: -> Binding; 
  basicAsString -> String; 
  debugIterator -> Iterator; 
  match -> Unknown; 
  list(_ : Collection) -> List; 
  debugValue -> String; 
  T -> Pattern; }
minigrace[.]: t331_ampersandEmbeddedTypes_test: 0.93 (+0.12): generating JavaScript code.
AST nodes compiled:
    identifier	5
    string	3
    op	3
    typeliteral	2
    method	2
    typedec	2
    member	2
    call	2
    num	1
    dialect	1
    defdec	1
minigrace[.]: t331_ampersandEmbeddedTypes_test: 0.97 (+0.04): done.
NoSuchMethod on line 11 of t331_ampersandEmbeddedTypes_test: no method internalType1 on Type type T.
  raised at module initialization at line 11 of t331_ampersandEmbeddedTypes_test
  requested on line 0 of .  10:   11: def x: T.internalType1 & U.internalType2 = 47  12: !FAIL t331_ampersandEmbeddedTypes_test.grace: wrong output
Errors:
NoSuchMethod on line 11 of t331_ampersandEmbeddedTypes_test: no method internalType1 on Type type T.
  raised at module initialization at line 11 of t331_ampersandEmbeddedTypes_test
  requested on line 0 of .  10:   11: def x: T.internalType1 & U.internalType2 = 47  12: Got output:
Expected output:
47
Test Succeeded
43/49 passed.
6 tests compiled but produced the wrong output.
